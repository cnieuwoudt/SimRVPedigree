% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LifeSim_Functions.R
\name{get_nextEvent}
\alias{get_nextEvent}
\title{Simulate next life event.}
\usage{
get_nextEvent(current_age, disease_status, lambda_birth, onset_hazard,
  death_hazard, part, birth_range, RR)
}
\arguments{
\item{current_age}{Numeric. The individuals current age.}

\item{disease_status}{Numeric. The disease status, disease_status = 1 if individual
has experienced onset, and 0 otherwise.}

\item{lambda_birth}{Numeric. The individuals birth rate.}

\item{onset_hazard}{Numeric. The population age-specific hazard rate for disease onset.}

\item{death_hazard}{Data.frame. Column 1 should specify the unaffected age-specific hazard rate for death, and column 2 should specify the affected age-specific hazard rate for death.}

\item{part}{Numeric. The partition of ages over which to apply the age-specific hazard rates in \code{onset_hazard} and \code{death_hazard}.}

\item{birth_range}{Numeric list of length 2. By default, \code{birth_range = c(18, 45)}. The minimum and maximum allowable ages that individuals will be able to reproduce.}

\item{RR}{Numeric. The relative risk of disease onset for individuals who have inherited the rare variant.}
}
\value{
Named matrix. The number of years until the next life event,
named by event type.
}
\description{
\code{get_nextEvent} randomly simulates the next life event for an individual
 given their current age, disease status, and rare variant status.
}
\details{
\code{get_nextEvent} randomly simulates the next life event for an individual by
generating the waiting times, via \link{get_WaitTime}, to reproduction, onset,
and death given the individual's current age.  The event with the shortest
waiting time is chosen as the next life event.  If get_nextEvent returns a value
named "Birth", then the next life event is reproduction, if get_nextEvent
returns a value named "Onset" then the next life event is onset of disease,
if get_nextEvent returns a value named "Death" then the next life event is death.
}
\examples{
part_vec <- seq(0, 100, by = 1)
Birth_rate <- 0.05
unaffected_mort <- 0.00001 + pgamma(seq(0.16, 16, by = .16),
                                    shape = 9.5, scale = 1)
affected_mort <- c(0.55, 0.48, 0.37, 0.23, 0.15,
                   pgamma(seq(0.96, 16, by = .16), shape = 4, scale = 1.5))
Dhaz_df  <- as.data.frame(cbind(unaffected_mort, affected_mort))
Ohaz_vec <- dgamma(seq(0.1, 10, by = .1), shape = 8, scale = 0.75)
set.seed(17)
get_nextEvent(current_age = 23, disease_status = 0,
           lambda_birth = Birth_rate, onset_hazard = Ohaz_vec,
           death_hazard = Dhaz_df, part = part_vec,
           birth_range = c(17,45), RR = 5)

set.seed(17)
get_nextEvent(current_age = 23, disease_status = 1,
           lambda_birth = Birth_rate, onset_hazard = Ohaz_vec,
           death_hazard = Dhaz_df, part = part_vec,
           birth_range = c(17,45), RR = 5)

}

