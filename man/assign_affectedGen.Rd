% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ManipulatePed_Functions.R
\name{assign_affectedGen}
\alias{assign_affectedGen}
\title{Assign minimum carrier generation to a simulated pedigree}
\usage{
assign_affectedGen(ped_file)
}
\arguments{
\item{ped_file}{data.frame. A ped file with the same format as one simulated with sim_RVpedigree}
}
\value{
reGen_ped A ped file with only affecteds and obligate carriers, with generation number assigned based on affected status.
}
\description{
\code{assign_affectedGen} reassigns the generation number based on affected status and trims the pedigree down to affecteds and obligate carriers.
}
\details{
Add details concerning reassignment...
}
\examples{
part_vec <- seq(0, 100, by = 1)
unaffected_mort <- 0.00001 + pgamma(seq(0.16, 16, by = .16),
                                    shape = 9.5, scale = 1)/350
affected_mort <- c(0.55, 0.48, 0.37, 0.23, 0.15,
                   pgamma(seq(0.96, 16, by = .16),
                   shape = 4, scale = 1.5))/300
Dhaz_df  <- (as.data.frame(cbind(unaffected_mort, affected_mort)))
Ohaz_vec <- (dgamma(seq(0.1, 10, by = .1), shape = 8, scale = 0.75))/60

set.seed(1)
ex_RVped1 <- sim_RVpedigree(onset_hazard = Ohaz_vec,
                            death_hazard = Dhaz_df,
                            part = part_vec, RR = 5, FamID = 1,
                            founder_byears = c(1900, 1910),
                            ascertain_span = c(1900, 2015),
                            num_affected = 2)

plot_RVpedigree(ex_RVped1[[1]], Print_Gen = TRUE)
#since there are at least two affected in generation 2, one of the
#founders is an obligate carrier and generation numbers for affecteds
#do not need to be re-assigned

#NOTE: this pedigree now only includes affected individuals and
#individuals who are required to create a pedigree.
plot_RVpedigree(assign_affectedGen(ex_RVped1[[1]]), Print_Gen = TRUE)

set.seed(3)
#example of reassigned generation number
ex_RVped2 <- sim_RVpedigree(onset_hazard = Ohaz_vec,
                            death_hazard = Dhaz_df,
                            part = part_vec, RR = 5, FamID = 1,
                            founder_byears = c(1900, 1910),
                            ascertain_span = c(1900, 2015),
                            num_affected = 2)

plot_RVpedigree(ex_RVped2[[1]], Print_Gen = TRUE)
#assign_affectedGen will reassign the generation for individual 5 to 2 and
#the generation for individual 9 to 3.

plot_RVpedigree(assign_affectedGen(ex_RVped2[[1]]), Print_Gen = TRUE,
                legend_location1 = "bottomleft")


set.seed(4)
#example of reassigned generation number
ex_RVped3 <- sim_RVpedigree(onset_hazard = Ohaz_vec,
                            death_hazard = Dhaz_df,
                            part = part_vec, RR = 5, FamID = 1,
                            founder_byears = c(1900, 1910),
                            ascertain_span = c(1900, 2015),
                            num_affected = 2)

plot_RVpedigree(ex_RVped3[[1]], Print_Gen = TRUE)
# reassign generation numbers for individuals 3, 5, and 10,
# to 1, 2, and, 2 respectively.
plot_RVpedigree(assign_affectedGen(ex_RVped3[[1]]), Print_Gen = TRUE,
                legend_location2 = "bottomright")

set.seed(6)
#example of reassigned generation number
ex_RVped4 <- sim_RVpedigree(onset_hazard = Ohaz_vec,
                            death_hazard = Dhaz_df,
                            part = part_vec, RR = 5, FamID = 1,
                            founder_byears = c(1900, 1910),
                            ascertain_span = c(1900, 2015),
                            num_affected = 2)

plot_RVpedigree(ex_RVped4[[1]], Print_Gen = TRUE)
#No reassignment of generation number required for these affecteds

plot_RVpedigree(assign_affectedGen(ex_RVped4[[1]]), Print_Gen = TRUE,
                legend_location1 = "bottomleft",
                legend_location2 = "bottomright")
}

