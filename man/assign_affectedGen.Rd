% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ManipulatePed_Functions.R
\name{assign_affectedGen}
\alias{assign_affectedGen}
\title{Assign Generation Number Based on Affected Status}
\usage{
assign_affectedGen(ped_file)
}
\arguments{
\item{ped_file}{data.frame. A pedigree to reassign generation number based on affection status, see details.}
}
\value{
\code{reGen_ped} A pedigree containing only affected members, obligate carriers, and founders with generation number based on the most recent common ancestor of affected members as, described in details.
}
\description{
\code{assign_affectedGen} assigns generation numbers among affected family members so that generation 1 represents the most recent generation that a putative disease variant shared identical by descent (IBD), as defined in Thompson (2000), by affected members could have been introduced into the pedigree.
}
\details{
The \code{assign_affectedGen} function accepts a pedigree simulated by \code{sim_RVped} and reassigns generation numbers among affected family members in the pedigree.  Specifically, given a pedigree this function reassigns the generation numbers of affected members so that generation 1 is assigned to the most recent common ancestor of all affected members.  We note that the individual in generation 1 could themselves be affected, i.e. an individual can be considered their own ancestor.

For example, consider a family with 2 affected members.  If the two affected members are a parent and his or her offspring, the affected parent would be assigned generation 1, and the affected child generation 2.  However, if the two affected members are a pair of siblings, each affected sibling would be assigned generation 2 since a common parent of the two affected siblings is assumed to be a carrier of a latent susceptibility variant.  Similarly, if the two affected members are a pair of cousins, each affected cousin is assigned generation 3, since a common grandparent of the two affected cousins is the most recent common ancestor from whom they could have inherited a shared variant associated with the disease.

Users who wish to assign generation number based on affection status in pedigrees that have not been simulated with the \code{SimRVpedigree} package must ensure that the pedigree, \code{ped_file}, supplied to \code{assign_affectedGen} contains the following variables for each pedigree member:

\enumerate{
\item \code{ID}: an identification number.
\item \code{dad_id}: identification number of father.
\item \code{mom_id}: identification number of mother.
\item \code{gender}: gender identification; if male \code{gender = 0}, if female \code{gender = 1}.
\item \code{affected}: affection status, if affected by disease \code{affected  = 1}, otherwise, \code{affected = 0}.
\item \code{birth_year}: the individual's year of birth.
\item \code{onset_year}: the individual's disease onset year, when applicable.
\item \code{death_year}: the individual's death year, when applicable.
\item \code{Gen}: the individual's generation number relative to the eldest founder.  For the eldest founder \code{Gen = 1}, for his or her offspring \code{Gen = 2}, etc.
}
}
\examples{
#Read in example pedigrees
data(EgPeds)

library(kinship2)
#assign to pedigree object to show before and after behavior of
#the assign_affectedGen function
ex_pedigree <- pedigree(id = EgPeds$ID,
                        dadid = EgPeds$dad_id,
                        momid = EgPeds$mom_id,
                        sex = (EgPeds$gender + 1),
                        affected = EgPeds$affected,
                        famid = EgPeds$FamID)


#create df to store pedigrees with reassigned generation number
RAG_peds <- EgPeds[1,]
RAG_peds <- RAG_peds[-1,]

for(i in 1:4){
  RAG_peds <- rbind(RAG_peds,
                    assign_affectedGen(EgPeds[which(EgPeds$FamID == i), ]))
}

RAG_pedigrees <-  pedigree(id = RAG_peds$ID,
                           dadid = RAG_peds$dad_id,
                           momid = RAG_peds$mom_id,
                           sex = (RAG_peds$gender + 1),
                           affected = RAG_peds$affected,
                           famid = RAG_peds$FamID)

# Compare pedigrees before and after reassigning
# generation number based on affcted status
par(mfrow = c(1, 2))
for (k in 1:4) {
  ID1 = paste0("ID", sep = ":",
               EgPeds[which(EgPeds$FamID == k), 2],
               sep = "\\n Gen:", EgPeds[which(EgPeds$FamID == k), 14])

  ID2 = paste0("ID", sep = ":",
               RAG_peds[which(RAG_peds$FamID == k), 2],
               sep = "\\n Gen:", RAG_peds[which(RAG_peds$FamID == k), 14])

  plot(ex_pedigree[paste0(k)], id = ID1)
  mtext(paste0("Ped", k, ": before generation reassignment", sep = ""),
        side = 3)

  plot(RAG_pedigrees[paste0(k)], id = ID2)
  mtext(paste0("Ped", k, ": after generation reassignment", sep = ""),
        side = 3)}


}
\references{
OUR MANUSCRIPT

Thompson, E. (2000). \emph{Statistical Inference from Genetic Data on Pedigrees.} NSF-CBMS Regional Conference Series in Probability and Statistics, 6, I-169.
}

