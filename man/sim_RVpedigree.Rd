% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PedSim_Functions.R
\name{sim_RVpedigree}
\alias{sim_RVpedigree}
\title{Simulate a pedigree ascertained for multiple affected individuals.}
\usage{
sim_RVpedigree(onset_hazard, death_hazard, part, RR, founder_byears,
  ascertain_span, num_affected, FamID, recall_probs, birth_range = c(18, 45),
  NB_params = c(2, 4/7), stop_year = 2015)
}
\arguments{
\item{onset_hazard}{Numeric vector. The population age-specific onset hazard.}

\item{death_hazard}{data.frame. Column 1 should specify the age specific
mortality rates in the unaffected population, while column 2 should provide
the age specific morality rates in the affected population.}

\item{part}{A numeric vector.  Partition of ages over which to apply the
age-specific hazards}

\item{RR}{A numeric constant. The relative risk of developing
disease for individuals who have inherited the rare variant.}

\item{founder_byears}{A numeric vector of length 2, the minimum and maximum founder birth years.  See details.}

\item{ascertain_span}{numeric vector of length 2. The ascertainment period,
i.e. first and last year of study.}

\item{num_affected}{Numeric.  The desired number of affected.}

\item{FamID}{numeric. Family identification number.}

\item{recall_probs}{Numeric.  Proband recall probabilities.  See details.}

\item{birth_range}{A numeric vector of length 2.  By default, \code{birth_range} = c(18, 45).  The minimum and maximum allowable birth ages in simulation.}

\item{NB_params}{A numeric vector of length 2. By default \code{NB_params} = c(2, 4/7). The size and probabiliy parameters of the negative binomial distribution that describes the number of children per household in the population.}

\item{stop_year}{The last year of study.  By default, \code{stop_year} = 2015. Note: any information simulated after stop.year is censored and will not be recorded in the ped file.}
}
\value{
full_ped The full ped file, prior to proband selection and trimming.

trim_ped The trimmed ped file, trimmed according to proband recall probability.
}
\description{
\code{sim_RVpedigree} simulates a pedigree with at least \code{num_affected} affecteds, according to a specified study design, selects a proband, and trims the pedigree based on the proband's recall probability of their relatives.
}
\details{
By assumption, all ascertained pedigrees are segregating a rare variant, which is rare enough to have been introduced by exactly one founder.  \code{sim_RVpedigree} starts the pedigree simulation process by simulating the birth year,  uniformly between the years specified by \code{founder_byears}, for the founder who has introduced the rare variant into the pedigree.  Next, life events are simulated for the founder.  Possible life events include: reproduction, disease onset, and death.  Currently, \code{sim_RVpedigree} only allows disease onset to occur once, i.e. no remission after disease onset.  Compuationally, this implies that after an individual has experienced disease onset, their waiting time to death is always simulated using the age-specific mortaility rates for the \emph{affected} population (i.e. the second column specified in \code{death_hazard}).  Life events for individuals who have inherited the rare variant are simulated such that their relative risk of developing disease is \code{RR}, according to a Cox proportional hazards model. For all individuals who have not inherited the rare variant, we assign a relative risk of disease onset of 1.  Any life events that occur after \code{stop_year} are censored.

The rare variant is transmitted to any offspring of the founder according to Mendel's laws, and the process of simulating life events is repeated for offspring, recursively, until no additional offspring are produced.

Upon simulating a pedigree with \code{num_affected} individuals, \code{sim_RVpedigree} chooses a proband from the set of available candidates.  Candidates for proband selection must have the following qualities:
\enumerate{
  \item experienced disease onset between the years specified by \code{ascertain_span}
  \item If less than \code{num_affected} - 1 individuals have experienced onset prior to the lower bound of \code{ascertain_span}, a proband is chosen from the affected individuals, such that there were at least \code{num_affected} - 1 affected individuals when the pedigree was ascertained for the proband.
}

After proband selection, the pedigree is trimmed based on the proband's recall probability of his or her relatives.  By default \code{recall_probs} is 4 times the kinship coefficent between the proband and the probands relative, which results in a recall probability of \eqn{2^{-(m-1)}} for a relative of degree \eqn{m}. Alternatively, the user may specify a list of recall probabilites of length \eqn{l > 0}, in which case the first \emph{l-1} items in \code{recall_probs} are the respective proband recall probabilites for relatives of degree \emph{1, 2, ..., l-1}, and the \emph{l}th item in \code{recall_probs} is the proband's recall probability for all relatives of degree \strong{\emph{l} or greater}.  For example, if \code{recall_probs = c(1)} all relatives will be recalled by the proband with probability 1.

\code{sim_RVpedigree} will only return ascertained pedigrees with at least \code{num_affected} affected individuals, that is if a simulated pedigree does not contain at least \code{num_affected} affected individuals \code{sim_RVpedigree} discards that pedigree and simulates another until the condition is met.  We note that even for \code{num_affected} \eqn{= 2}, \code{sim_RVpedigree} can be computationally expensive.  To randomly simulate a pedigree without a desired number of affecteds use instead \code{\link{sim_ped}}.

We note that, for rare diseases, this simulation process is computaionally expensive.  \strong{We highly recommend the use of parallel processing or cluster computing} when simulating a sample of \eqn{n} pedigrees ascertained for multiple affected individuals.  See parallel processing example.
}
\section{See Also}{

\code{\link{sim_ped}}
}
\examples{
#Define a parition of ages over which to apply the age-specific hazards
part_vec <- seq(0, 100, by = 1)


#Specify age-specific mortality rates for affected and unaffected individuals
set.seed(1)
unaffected_mort <- c(0.0001, 0.00005, rnorm(98, mean = 0.00001, sd = 0.00001)) +
                     pgamma(seq(0.16, 16, by = .16), shape = 9, scale = 1)/350

affected_mort <- c(0.35, 0.28, 0.22, 0.16, 0.135, 0.12, 0.115, 0.081, 0.057, 0.05,
                   pgamma(seq(1.76, 16, by = .16), shape = 4, scale = 1.5))/200

#Combine mortality rates in data frame, with
# unaffected mortality rates in column 1, and
# affected mortality rates in column 2

Dhaz_df  <- (as.data.frame(cbind(unaffected_mort, affected_mort)))

#Specify the population age-specific onset hazard
Ohaz_vec <- (dgamma(seq(0.1, 10, by = .1), shape = 8, scale = 0.75))

#Simulate pedigree ascertained for multiple affected individuals
set.seed(22)
ex_RVped <- sim_RVpedigree(onset_hazard = Ohaz_vec,
                           death_hazard = Dhaz_df,
                           part = part_vec, RR = 5, FamID = 1,
                           founder_byears = c(1900, 1910),
                           ascertain_span = c(1900, 2015),
                           num_affected = 2)




#Plot ex_RVped pedigrees using the kinship2 package
library(kinship2)

#Define pedigree object for full pedigree
RV_statusF <- ex_RVped[[1]]$DA1 + ex_RVped[[1]]$DA2
AffectedF  <- ex_RVped[[1]]$affected

full_RVped <- pedigree(id = ex_RVped[[1]]$ID,
                        dadid = ex_RVped[[1]]$dad_id,
                        momid = ex_RVped[[1]]$mom_id,
                        sex = (ex_RVped[[1]]$gender + 1),
                        affected = cbind(AffectedF, RV_statusF),
                        famid = ex_RVped[[1]]$FamID)
FullRVped <- full_RVped['1']

#plot pedigree and legend
plot(FullRVped)
pedigree.legend(FullRVped, location = "topleft",  radius = 0.25)


#Define pedigree object for trimmed, i.e, ascertained, pedigree
RV_statusT <- ex_RVped[[2]]$DA1 + ex_RVped[[2]]$DA2
AffectedT  <- ex_RVped[[2]]$affected
ProbandT  <- ex_RVped[[2]]$is_proband

trim_RVped <- pedigree(id = ex_RVped[[2]]$ID,
                       dadid = ex_RVped[[2]]$dad_id,
                       momid = ex_RVped[[2]]$mom_id,
                       sex = (ex_RVped[[2]]$gender + 1),
                       affected = cbind(AffectedT, ProbandT, RV_statusT),
                       famid = ex_RVped[[2]]$FamID)
TrimRVped <- trim_RVped['1']
plot(TrimRVped)
pedigree.legend(TrimRVped, location = "topleft",  radius = 0.25)



#how to incorporate parallel processing
library(doParallel)
library(doRNG)

cl <- makeCluster(detectCores())  # create cluster
registerDoParallel(cl)            # register cluster
on.exit(stopCluster(cl))

npeds = 8    #set the number of pedigrees to generate
rnseed = 22  #choose a seed

RV_peds = foreach(i = seq(npeds), .combine = rbind,
                  .packages = c("kinship2", "SimRVPedigree"),
                  .options.RNG = rnseed
                  ) \%dorng\% {
                  sim_RVpedigree(onset_hazard = Ohaz_vec,
                                 death_hazard = Dhaz_df,
                                 part = part_vec, RR = 5, FamID = i,
                                 founder_byears = c(1900, 1910),
                                 ascertain_span = c(1900, 2015),
                                 num_affected = 2)[[2]]}

stopCluster(cl)


}

