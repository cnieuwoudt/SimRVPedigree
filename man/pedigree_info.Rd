% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ManipulatePed_Functions.R
\name{pedigree_info}
\alias{pedigree_info}
\title{Obtain specialized pedigree information}
\usage{
pedigree_info(ped_file, label_year)
}
\arguments{
\item{ped_file}{Data.frame. A pedigree generated by \code{sim_ped}.}

\item{label_year}{A numeric constant.  The reference year used to determine current age for pedigree members.}
}
\value{
A list containing the following:

\code{link_format} data.frame. The pedigree in linkage format; i.e. containing only the fields: FamID, ID, dadID, momID, affected.

\code{affected_info} data.frame.  Relevant information for the affected realtives only.

\code{kinshipMat} The kinship matrix for the pedigree (see kinship2 package).

\code{kinshipPedigree} An object of class pedigree (see kinship2 package).  A pedigree object which can be plotted using R's plot function.  See example.

\code{pedLabs} ID labels which can be fed to kinship2 plotting function.  See example.
}
\description{
Obtain specialized pedigree information
}
\details{
Users who wish to use \code{pedigree_info} for pedigrees not simulated with the \code{SImRVPedigree} package must ensure that the pedigree, \code{ped_file}, supplied to \code{pedigree_info} contains the following variables for each pedigree member:
\enumerate{
\item \code{ID}: an identification number.
\item \code{dadID}: identification number of father.
\item \code{momID}: identification number of mother.
\item \code{sex}: sex identification; if male \code{sex = 0}, if female \code{sex = 1}.
\item \code{affected}: affection status, if affected by disease \code{affected  = 1}, otherwise, \code{affected = 0}.}
Optionally, \code{ped_file} may contain any of the additional variables contained in pedigrees simulated by \code{\link{sim_RVped}}.
}
\examples{
data(EgPeds)

Fam1 <- pedigree_info(EgPeds[EgPeds$FamID == 1, ], label_year = 2015)
summary(Fam1)

head(Fam1$link_format)
Fam1$affected_info
Fam1$kinshipMat

library(kinship2)
plot(Fam1$kinshipPedigree)
pedigree.legend(Fam1$kinshipPedigree, location = "topleft",  radius = 0.25)

plot(Fam1$kinshipPedigree, id = Fam1$pedLabs)
pedigree.legend(Fam1$kinshipPedigree, location = "topleft",  radius = 0.25)

}
\references{
Terry M Therneau and Jason Sinnwell (2015). **kinship2: Pedigree Functions.** *R package version 1.6.4.* https://CRAN.R-project.org/package=kinship2
}
