% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Trimming_Functions.R
\name{trim_ped}
\alias{trim_ped}
\title{Choose a Proband from a Pedigree and Trim Pedigree.}
\usage{
trim_ped(ped_file, recall_probs)
}
\arguments{
\item{ped_file}{Data.frame. A pedigree generated by \code{sim_ped}.}

\item{recall_probs}{Numeric. The proband's recall probabilities for relatives, see details.  If missing, four times kinship coefficient between the proband and the relative is used.}
}
\value{
\code{ped_trim} The trimmed pedigree.
}
\description{
From a supplied pedigree, \code{trim_ped} chooses a proband and trims relatives based on the proband's probability of recalling his or her relatives.
}
\details{
By default \code{recall_probs} is 4 times the kinship coefficient between the proband and the probands relative, which results in a recall probability of \eqn{2^{-(n-1)}} for a relative of degree \eqn{n}. Alternatively, the user may specify a list of recall probabilities of length \eqn{l > 0}, in which case the first \emph{l-1} items in \code{recall_probs} are the respective proband recall probabilities for relatives of degree \emph{1, 2, ..., l-1}, and the \emph{l}th item in \code{recall_probs} is the proband's recall probability for all relatives of degree \strong{\emph{l} or greater}.  For example if \code{recall_probs = c(1)} all relatives will be recalled by the proband with probability 1.

Within the \code{trim_ped} function, the argument \code{num_affected} serves to determine which affected members may be selected as the proband, not to ensure the number of affected members in the trimmed pedigree, as in \code{sim_RVped}.  For example, if there are only two affected members and \code{num_affected = 2}, then \code{trim_ped} will choose as the proband the second individual to experience onset, so that at the time of ascertainment the pedigree would have had two affected family members.  If \code{recall_probs != c(1)}, it is possible that proband will not recall the other affected.  Hence, the trimmed pedigree may have only 1 affected family member.

Trimmed family members always have the following qualities:
\enumerate{
  \item availability status = 0
  \item affected status = 0
  \item birth year = NA
  \item onset year = NA
  \item death year = NA
}
}
\examples{
#Read in example pedigree to trim
data(ExamplePedigrees)

#plot example_ped using kinship2
library(kinship2)
ex_pedigree <- pedigree(id = ExamplePedigrees$ID,
                        dadid = ExamplePedigrees$dad_id,
                        momid = ExamplePedigrees$mom_id,
                        sex = (ExamplePedigrees$gender + 1),
                        affected = cbind(Affected = ExamplePedigrees$affected,
                                         RV_status = ExamplePedigrees$DA1 +
                                                     ExamplePedigrees$DA2),
                        famid = ExamplePedigrees$FamID)['1']
plot(ex_pedigree)
pedigree.legend(ex_pedigree, location = "topleft",  radius = 0.25)
mtext("Original Pedigree", side = 3, line = 2)


## Trim pedigree examples
#illustrate the effects of various recall_probs settings
Recall_Probabilities <- list(r1 = c(1, 0),
                             r2 = c(1),
                             r3 = c(1, 0.5, 0.25, 0.125))


for (k in 1:length(Recall_Probabilities)) {
   set.seed(2)
   #trim pedigree
   TrimPed <- trim_ped(ped_file = ExamplePedigrees[which(ExamplePedigrees$FamID == 1), ],
                       recall_probs = Recall_Probabilities[[k]])

   #plot trimmed pedigree
   Tped <- pedigree(id = TrimPed$ID,
                    dadid = TrimPed$dad_id,
                    momid = TrimPed$mom_id,
                    sex = (TrimPed$gender + 1),
                    affected = cbind(Affected = TrimPed$affected,
                                     Proband = TrimPed$is_proband,
                                     RV_status = TrimPed$DA1 + TrimPed$DA2),
                    famid = TrimPed$FamID)['1']

   plot(Tped)
   pedigree.legend(Tped, location = "topleft",  radius = 0.25)
   mtext(paste0("recall_probs = (", sep = "",
                paste(Recall_Probabilities[[k]], collapse = ", "), ')' ),
                side = 3 )
}


}

